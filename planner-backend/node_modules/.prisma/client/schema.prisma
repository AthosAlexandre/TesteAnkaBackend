generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Simulation {
  id         String              @id @default(cuid())
  name       String
  isSnapshot Boolean             @default(false)
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  versions   SimulationVersion[]
}

model SimulationVersion {
  id           String       @id @default(cuid())
  simulationId String
  simulation   Simulation   @relation(fields: [simulationId], references: [id])
  title        String
  startDate    DateTime
  realRate     Float
  lifeStatus   LifeStatus   @default(ALIVE)
  createdAt    DateTime     @default(now())
  allocations  Allocation[]
  movements    Movement[]
  insurances   Insurance[]
}

enum LifeStatus {
  ALIVE
  DEAD
  INVALID
}

model Allocation {
  id                   String             @id @default(cuid())
  versionId            String
  version              SimulationVersion  @relation(fields: [versionId], references: [id])
  kind                 AllocationKind
  name                 String
  hasFinancing         Boolean            @default(false)
  financingStart       DateTime?
  financingMonths      Int?
  financingMonthlyRate Float?
  downPayment          Float?
  records              AllocationRecord[]
}

enum AllocationKind {
  FINANCIAL
  REAL_ESTATE
}

model AllocationRecord {
  id           String     @id @default(cuid())
  allocationId String
  allocation   Allocation @relation(fields: [allocationId], references: [id])
  value        Float
  at           DateTime
}

model Movement {
  id        String            @id @default(cuid())
  versionId String
  version   SimulationVersion @relation(fields: [versionId], references: [id])

  kind      MovementKind
  amount    Float
  frequency Frequency
  startDate DateTime
  endDate   DateTime?

  nextId   String?   @unique
  next     Movement? @relation("MovementNext", fields: [nextId], references: [id])
  previous Movement? @relation("MovementNext")

  @@index([versionId])
}

enum MovementKind {
  INCOME
  EXPENSE
}

enum Frequency {
  ONCE
  MONTHLY
  YEARLY
}

model Insurance {
  id             String            @id @default(cuid())
  versionId      String
  version        SimulationVersion @relation(fields: [versionId], references: [id])
  type           InsuranceType
  name           String
  startDate      DateTime
  months         Int
  monthlyPremium Float
  insuredValue   Float
}

enum InsuranceType {
  LIFE
  DISABILITY
}
