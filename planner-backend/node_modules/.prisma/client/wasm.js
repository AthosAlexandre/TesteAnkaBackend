
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.SimulationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isSnapshot: 'isSnapshot',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SimulationVersionScalarFieldEnum = {
  id: 'id',
  simulationId: 'simulationId',
  title: 'title',
  startDate: 'startDate',
  realRate: 'realRate',
  lifeStatus: 'lifeStatus',
  createdAt: 'createdAt'
};

exports.Prisma.AllocationScalarFieldEnum = {
  id: 'id',
  versionId: 'versionId',
  kind: 'kind',
  name: 'name',
  hasFinancing: 'hasFinancing',
  financingStart: 'financingStart',
  financingMonths: 'financingMonths',
  financingMonthlyRate: 'financingMonthlyRate',
  downPayment: 'downPayment'
};

exports.Prisma.AllocationRecordScalarFieldEnum = {
  id: 'id',
  allocationId: 'allocationId',
  value: 'value',
  at: 'at'
};

exports.Prisma.MovementScalarFieldEnum = {
  id: 'id',
  versionId: 'versionId',
  kind: 'kind',
  amount: 'amount',
  frequency: 'frequency',
  startDate: 'startDate',
  endDate: 'endDate',
  nextId: 'nextId'
};

exports.Prisma.InsuranceScalarFieldEnum = {
  id: 'id',
  versionId: 'versionId',
  type: 'type',
  name: 'name',
  startDate: 'startDate',
  months: 'months',
  monthlyPremium: 'monthlyPremium',
  insuredValue: 'insuredValue'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.LifeStatus = exports.$Enums.LifeStatus = {
  ALIVE: 'ALIVE',
  DEAD: 'DEAD',
  INVALID: 'INVALID'
};

exports.AllocationKind = exports.$Enums.AllocationKind = {
  FINANCIAL: 'FINANCIAL',
  REAL_ESTATE: 'REAL_ESTATE'
};

exports.MovementKind = exports.$Enums.MovementKind = {
  INCOME: 'INCOME',
  EXPENSE: 'EXPENSE'
};

exports.Frequency = exports.$Enums.Frequency = {
  ONCE: 'ONCE',
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY'
};

exports.InsuranceType = exports.$Enums.InsuranceType = {
  LIFE: 'LIFE',
  DISABILITY: 'DISABILITY'
};

exports.Prisma.ModelName = {
  Simulation: 'Simulation',
  SimulationVersion: 'SimulationVersion',
  Allocation: 'Allocation',
  AllocationRecord: 'AllocationRecord',
  Movement: 'Movement',
  Insurance: 'Insurance'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\athos\\OneDrive\\Documents\\GitHub\\TesteAnkaBackend\\planner-backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\athos\\OneDrive\\Documents\\GitHub\\TesteAnkaBackend\\planner-backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Simulation {\n  id         String              @id @default(cuid())\n  name       String\n  isSnapshot Boolean             @default(false)\n  createdAt  DateTime            @default(now())\n  updatedAt  DateTime            @updatedAt\n  versions   SimulationVersion[]\n}\n\nmodel SimulationVersion {\n  id           String       @id @default(cuid())\n  simulationId String\n  simulation   Simulation   @relation(fields: [simulationId], references: [id])\n  title        String\n  startDate    DateTime\n  realRate     Float\n  lifeStatus   LifeStatus   @default(ALIVE)\n  createdAt    DateTime     @default(now())\n  allocations  Allocation[]\n  movements    Movement[]\n  insurances   Insurance[]\n}\n\nenum LifeStatus {\n  ALIVE\n  DEAD\n  INVALID\n}\n\nmodel Allocation {\n  id                   String             @id @default(cuid())\n  versionId            String\n  version              SimulationVersion  @relation(fields: [versionId], references: [id])\n  kind                 AllocationKind\n  name                 String\n  hasFinancing         Boolean            @default(false)\n  financingStart       DateTime?\n  financingMonths      Int?\n  financingMonthlyRate Float?\n  downPayment          Float?\n  records              AllocationRecord[]\n}\n\nenum AllocationKind {\n  FINANCIAL\n  REAL_ESTATE\n}\n\nmodel AllocationRecord {\n  id           String     @id @default(cuid())\n  allocationId String\n  allocation   Allocation @relation(fields: [allocationId], references: [id])\n  value        Float\n  at           DateTime\n}\n\nmodel Movement {\n  id        String            @id @default(cuid())\n  versionId String\n  version   SimulationVersion @relation(fields: [versionId], references: [id])\n\n  kind      MovementKind\n  amount    Float\n  frequency Frequency\n  startDate DateTime\n  endDate   DateTime?\n\n  nextId   String?   @unique\n  next     Movement? @relation(\"MovementNext\", fields: [nextId], references: [id])\n  previous Movement? @relation(\"MovementNext\")\n\n  @@index([versionId])\n}\n\nenum MovementKind {\n  INCOME\n  EXPENSE\n}\n\nenum Frequency {\n  ONCE\n  MONTHLY\n  YEARLY\n}\n\nmodel Insurance {\n  id             String            @id @default(cuid())\n  versionId      String\n  version        SimulationVersion @relation(fields: [versionId], references: [id])\n  type           InsuranceType\n  name           String\n  startDate      DateTime\n  months         Int\n  monthlyPremium Float\n  insuredValue   Float\n}\n\nenum InsuranceType {\n  LIFE\n  DISABILITY\n}\n",
  "inlineSchemaHash": "65b2495fc2b91d90e22cc0489941b8e3bdc543e59661ae17daef9a348c2bad9a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Simulation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isSnapshot\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"SimulationVersion\",\"relationName\":\"SimulationToSimulationVersion\"}],\"dbName\":null},\"SimulationVersion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"simulationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"simulation\",\"kind\":\"object\",\"type\":\"Simulation\",\"relationName\":\"SimulationToSimulationVersion\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"realRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lifeStatus\",\"kind\":\"enum\",\"type\":\"LifeStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"allocations\",\"kind\":\"object\",\"type\":\"Allocation\",\"relationName\":\"AllocationToSimulationVersion\"},{\"name\":\"movements\",\"kind\":\"object\",\"type\":\"Movement\",\"relationName\":\"MovementToSimulationVersion\"},{\"name\":\"insurances\",\"kind\":\"object\",\"type\":\"Insurance\",\"relationName\":\"InsuranceToSimulationVersion\"}],\"dbName\":null},\"Allocation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"object\",\"type\":\"SimulationVersion\",\"relationName\":\"AllocationToSimulationVersion\"},{\"name\":\"kind\",\"kind\":\"enum\",\"type\":\"AllocationKind\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasFinancing\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"financingStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"financingMonths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"financingMonthlyRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"downPayment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"records\",\"kind\":\"object\",\"type\":\"AllocationRecord\",\"relationName\":\"AllocationToAllocationRecord\"}],\"dbName\":null},\"AllocationRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allocationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allocation\",\"kind\":\"object\",\"type\":\"Allocation\",\"relationName\":\"AllocationToAllocationRecord\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Movement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"object\",\"type\":\"SimulationVersion\",\"relationName\":\"MovementToSimulationVersion\"},{\"name\":\"kind\",\"kind\":\"enum\",\"type\":\"MovementKind\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"frequency\",\"kind\":\"enum\",\"type\":\"Frequency\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"next\",\"kind\":\"object\",\"type\":\"Movement\",\"relationName\":\"MovementNext\"},{\"name\":\"previous\",\"kind\":\"object\",\"type\":\"Movement\",\"relationName\":\"MovementNext\"}],\"dbName\":null},\"Insurance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"object\",\"type\":\"SimulationVersion\",\"relationName\":\"InsuranceToSimulationVersion\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"InsuranceType\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"months\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"monthlyPremium\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"insuredValue\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

